library(dplyr)
library(readr)
*'test.csv
data_train <- read_csv("https://www.kaggle.com/c/titanic/download/train.csv")
problems(data_train)
train <- read_csv("https://www.kaggle.com/c/titanic/download/train.csv")
train <- read.csv("https://www.kaggle.com/c/titanic/download/train.csv")
fix(train)
data_train <- read_csv("train.csv")
rm(train)
colnames(data_train)
str(data_train)
download.packages("Amelia")
install.packages("Amelia")
library(Amelia)
missmap(data_train)
data_train1 <- read.csv("train.csv")
missmap(data_train1)
missmap(data_train)
missmap(data_train1)
missmap(data_train)
fix(data_train)
data_train <- read.csv("train.csv", na = c("NA", ""))
missmap(data_train)
library(RColorBrewer)
display.brewer.all()
jBrewColors <- brewer.pal(n = 8, name = "Set3")
missmap(data_train, col = jBrewColors)
jBrewColors <- brewer.pal(n = 8, name = "Set2")
missmap(data_train, col = jBrewColors)
jBrewColors <- brewer.pal(n = 8, name = "Set1")
missmap(data_train, col = jBrewColors)
jBrewColors <- brewer.pal(n = 8, name = "Set2")
missmap(data_train, col = jBrewColors)
jBrewColors <- brewer.pal(n = 2, name = "Set2")
jBrewColors <- brewer.pal(n = 3, name = "Set2")
missmap(data_train, col = jBrewColors)
library("colorspace", lib.loc="C:/Program Files/R/R-3.2.1/library")
pal <- choose_palette()
colors_A <- pal(2)
colors_B <- rainbow_hcl(2)
missmap(data_train, col = colors_A)
missmap(data_train, col = colors_B)
missmap(data_train, col = colors_A)
pal <- choose_palette()
colors_A <- pal(2)
missmap(data_train, col = colors_A)
missmap(data_train, col = colors_B)
colors_B <- diverge_hcl(2)
missmap(data_train, col = colors_B)
colors_B <- diverge_hsl(2)
colors_B <- terrain_hcl(2)
missmap(data_train, col = colors_B)
colors_B <- sequential_hcl(2)
missmap(data_train, col = colors_B)
missmap(data_train, col = colors_B)
data_train <- read_csv("train.csv", na = c("NA", ""))
summary(data_train)
data_train <- read_csv("train.csv")
missmap(data_train, col = colors_B)
data_train <- read_csv("train.csv", na = c("NA", ""))
data_train <- read.csv("train.csv", na = c("NA", ""))
missmap(data_train, col = colors_B)
data_train <- read_csv("train.csv")
summary(data_train)
df <- data.frame("h"=c(1,1,"."))
summary(df)
str(df)
df$h[df$h == "."] <- NA
str(df)
df <- data.frame("h"=c(1,1,"."))
df[df == "."] <- NA
str(df)
is.na(df)
df <- data.frame("h"=c(1,1,""))
df[df == ""] <- NA
is.na(df)
df <- data.frame("h"=c(1,1,""), "c" = c(2,2,""))
df[df == ""] <- NA
is.na(df)
data_train <- read_csv("train.csv")
summary(data_train)
data_train[data_train == ""] <- NA
summary(data_train)
data_train[data_train$Cabin == ""] <- NA
is.na(data_train) <- ""
library("car", lib.loc="C:/Program Files/R/R-3.2.1/library")
data_train$Cabin <- recode(data_train$Cabin, "" = NA)
data_train$Cabin <- recode(data_train$Cabin, "'' = NA")
summary(data_train)
missmap(data_train, col = colors_A)
missmap(data_train, col = colors_B)
table(is.na(data_train$Cabin))
prop.table(is.na(data_train$Cabin))
prop.table(table(is.na(data_train$Cabin)))
prop.table(table(is.na(data_train$Age)))
head(data_train)
summary(data_train)
summary(data_train1)
data_train1 <- read_csv("train.csv", na = c("NA", ""))
data_train1 <- read.csv("train.csv", na = c("NA", ""))
summary(data_train1)
prop.table(is.na(data_train$Cabin))
prop.table(table(is.na(data_train1$Cabin)))
prop.table(table(is.na(data_train1$Embarked)))
prop.table(table(is.na(data_train1$Embarked)))
prop.table(table(is.na(data_train$Embarked)))
table(is.na(data_train$Embarked))
table(is.na(data_train1$Embarked))
table(is.na(data_train$Cabin))
data_train <- read_csv("train.csv")
table(is.na(data_train$Cabin))
table(is.na(data_train$Age))
table(is.na(data_train$Embarked))
data_train$Cabin <- recode(data_train$Cabin, "'' = NA")
table(is.na(data_train$Embarked))
table(is.na(data_train$Cabin))
table(data_train$Cabin == "")
data_train <- read_csv("train.csv")
table(data_train$Cabin == "")
apply(data_train, 2, function(column) table(column == "") )
sapply(data_train, 2, function(column) table(column == "") )
sapply(data_train, function(column) table(column == "") )
summary(data_train)
library(magrittr)
data_train %>% select(Name, Sex, Ticket, Cabin, Embarked) %>% apply(., 2, function(column) table(column == ""))
class(data_train %>% select(Name, Sex, Ticket, Cabin, Embarked) %>% apply(., 2, function(column) table(column == "")))
library(ggplot2)
spaces <- data_train %>% select(Name, Sex, Ticket, Cabin, Embarked) %>% apply(., 2, function(column) table(column == ""))
barplot(spaces$Name)
display.brewer.all()
pal <- choose_palette()
colors_A <- pal(2)
missmap(data_train, col = colors_A)
pal <- choose_palette()
colors_A <- pal(2)
missmap(data_train, col = colors_A)
pal <- choose_palette()
colors_A <- pal(2)
missmap(data_train, col = colors_A)
pal <- choose_palette()
colors_A <- pal(2)
missmap(data_train, col = colors_A)
data_train <- read_csv("train.csv")
data_test <- read_csv("test.csv")
data_train$Cabin <- recode(data_train$Cabin, "'' = NA")
data_train$Embarked <- recode(data_train$Embarked, "'' = NA")
missmap(data_train, col = colors_A)
pal <- choose_palette()
colors_A <- pal(2)
missmap(data_train, col = colors_A)
pal <- choose_palette()
colors_A <- pal(2)
missmap(data_train, col = colors_A)
pal <- choose_palette()
pal <- choose_palette()
colors_A <- pal(2)
missmap(data_train, col = colors_A)
pal <- choose_palette()
View(pal)
pal <- choose_palette()
missmap(data_train, col = colors_A, legend=FALSE)
colors_A <- sequential_hcl(2)
missmap(data_train, col = colors_A, legend=FALSE)
missmap(data_train, col = colors_A, legend=FALSE, y.labels = F)
table(data_train$Survived)
colnames(table(data_train$Survived))
colnames(as.data.frame(table(data_train$Survived))
)
as.data.frame(table(data_train$Survived))
ggplot(as.data.frame(table(data_train$Survived)), aes(x = factor(Freq))) + geom_bar(stat = "bin" )
ggplot(as.data.frame(table(data_train$Survived)), aes(x = factor(Var1))) + geom_bar(stat = "bin" )
ggplot(as.data.frame(table(data_train$Survived)), aes(x = factor(Var1), y = Freq)) + geom_bar(stat = "identity" )
ggplot(as.data.frame(table(data_train$Survived)), aes(x = factor(Var1), y = Freq, fill = Var1)) + geom_bar(stat = "identity" )
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" )
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + scale_fill_brewer(palette="Set1")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + scale_fill_brewer(palette="Set2")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + scale_fill_brewer(palette="Set3")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + scale_fill_brewer(palette="Dark2")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + scale_fill_brewer(palette="Paired")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + scale_fill_brewer(palette="Accend")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + scale_fill_brewer(palette="Accent")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + scale_fill_brewer(palette="Set1")
theme_get()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_wsj()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_wsj()+ scale_colour_wsj("colors6")
install.packages("ggthemes")
library(ggthemes)
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_wsj()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_wsj()+ scale_colour_wsj("colors6")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_economist()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_wsj()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + scale_fill_brewer(palette="Set1")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_wsj()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_few()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_fivethirtyeight()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_hc()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_solarized()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_tufte()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_wsj()
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_solarized(light=FALSE)
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_solarized(light=FALSE)+ scale_colour_solarized("red"))
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_solarized(light=FALSE)+ scale_colour_solarized("red")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_solarized(light=FALSE)
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + theme_solarized_2()
theme_set(theme_bw())
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" )
theme_set(theme_grey())
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" )
theme_set(theme_solarized_2()
)
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" )
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "identity" ) + guides(fill=FALSE)
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1))
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, y = Freq, fill = Var1)) + geom_bar(stat = "bin")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1)) + geom_bar(stat = "bin")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, fill = colors_A)) + geom_bar(stat = "bin")
ggplot(as.data.frame(table(data_train$Survived)), aes(x = Var1, fill = colors_B)) + geom_bar(stat = "bin")
