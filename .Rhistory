require(stringr)
data_train$Title <-  data_train$Name %>% str_extract(., "\\w+\\.") %>% str_sub(.,1, -2)
unique(data_train$Title)
impute.mean <- function (impute_col, filter_var, var_levels) {
for (lev in var_levels) {
impute_col[filter_var == lev] %<>% mean(., na.rm = T)
}
return (impute_col)
}
data_train$Age <- impute.mean(data_train$Age, data_train$Title, c("Dr", "Master", "Mrs", "Miss", "Mr"))
summary(data_train$Age)
table(data_train$Fare)
head(table(data_train$Fare))
data_train %>% filter(Fare < 6) %>% select(Fare, Age, Pclass, Title) %>% arrange(Fare)
data_train$Fare[data_train$Fare == 0] <- NA
head(table(data_train$Fare))
summary(data_train$Fare)
as.numeric(levels(data_train$Pclass))
data_train$Fare <- impute.mean(data_train$Fare, data_train$Pclass, as.numeric(levels(data_train$Pclass)))
summary(data_train$Fare)
data_train %>% filter(Fare < 6) %>% select(Fare, Age, Pclass, Title) %>% arrange(Fare)
require(readr)
data_train <- read_csv("train.csv")
data_test <- read_csv("test.csv")
require(car)
data_train$Cabin <- recode(data_train$Cabin, "'' = NA")
data_train$Embarked <- recode(data_train$Embarked, "'' = NA")
## Для создания графиков в этом исследовании я буду стараться использовать пакет 'ggplot2'
require(ggplot2)
require(gridExtra)
data_train %<>% transform(., Survived = as.factor(Survived),
Pclass = as.factor(Pclass),
Sex = as.factor(Sex),
Embarked = as.factor(Embarked),
SibSp = as.numeric(SibSp))
colours <- rainbow_hcl(4, start = 30, end = 300)
ggbar <- ggplot(data_train) + geom_bar(stat = "bin", width=.6, fill= colours[3], colour="black") +
guides(fill=FALSE) + ylab(NULL)
g1 <- ggbar + aes(x = factor(Survived, labels = c("Погиб", "Выжил"))) +
ggtitle("Распределение погибших\n и спасшихся пассажиров") + xlab(NULL)
g2 <- ggbar + aes(x = factor(Pclass, labels = c("Первый", "Второй", "Третий"))) +
ggtitle("Распределение пассажиров\n по классам обслуживания") + xlab(NULL)
g3 <- ggbar + aes(x = factor(Sex, labels = c("Женщина", "Мужчина"))) +
ggtitle("Распределение пассажиров между полами") + xlab(NULL)
g4 <- ggbar + aes(x = as.factor(SibSp)) +
ggtitle("Распределение пассажиров по сумме\n 'супруг + братья и сёстры на борту корабля'") +
xlab(NULL)
g5 <- ggbar + aes(x = as.factor(Parch)) +
ggtitle("Распределение пассажиров по сумме\n 'родители + дети на борту'") + xlab(NULL)
g6 <- ggbar + aes(x = factor(Embarked, labels = c("Cherbourg", "Queenstown", "Southampton"))) +
ggtitle("Распределение пассажиров\n по пункту отправления") +
xlab(NULL)
gghist <- ggplot(data_train) + geom_histogram(fill= colours[4]) + guides(fill=FALSE) + ylab(NULL)
g7 <- gghist + aes(x = Age) + xlab(NULL) + ggtitle("Распределение пассажиров по возрастам")
g8 <- gghist + aes(x = Fare) + xlab(NULL) + ggtitle("Распределение пассажиров\n по стоимости билетов")
grid.arrange(g1, g2, g3, g4, g5, g6, g7, g8, ncol = 2, nrow=4)
data_train$Embarked[is.na(data_train$Embarked)] <- "S"
require(stringr)
data_train$Title <-  data_train$Name %>% str_extract(., "\\w+\\.") %>% str_sub(.,1, -2)
unique(data_train$Title)
impute.mean <- function (impute_col, filter_var, var_levels) {
for (lev in var_levels) {
impute_col[filter_var == lev] %<>% mean(., na.rm = T)
}
return (impute_col)
}
data_train$Age <- impute.mean(data_train$Age, data_train$Title, c("Dr", "Master", "Mrs", "Miss", "Mr"))
summary(data_train$Age)
head(table(data_train$Fare))
data_train %>% filter(Fare < 6) %>% select(Fare, Age, Pclass, Title) %>% arrange(Fare)
data_train$Fare[data_train$Fare == 0] <- NA
data_train %>% filter(Fare < 6) %>% select(Fare, Age, Pclass, Title) %>% arrange(Fare)
rm(list = ls())
require(readr)
data_train <- read_csv("train.csv")
data_test <- read_csv("test.csv")
require(magrittr)
require(dplyr)
data_train %>% select(Name, Sex, Ticket, Cabin, Embarked) %>% apply(., 2, function(column) sum(column == ""))
require(car)
data_train$Cabin <- recode(data_train$Cabin, "'' = NA")
data_train$Embarked <- recode(data_train$Embarked, "'' = NA")
require(colorspace)
colors_A <- sequential_hcl(2)
require(Amelia)
missmap(data_train, col = colors_A, legend=FALSE)
## Для создания графиков в этом исследовании я буду стараться использовать пакет 'ggplot2'
require(ggplot2)
require(gridExtra)
data_train %<>% transform(., Survived = as.factor(Survived),
Pclass = as.factor(Pclass),
Sex = as.factor(Sex),
Embarked = as.factor(Embarked),
SibSp = as.numeric(SibSp))
colours <- rainbow_hcl(4, start = 30, end = 300)
ggbar <- ggplot(data_train) + geom_bar(stat = "bin", width=.6, fill= colours[3], colour="black") +
guides(fill=FALSE) + ylab(NULL)
g1 <- ggbar + aes(x = factor(Survived, labels = c("Погиб", "Выжил"))) +
ggtitle("Распределение погибших\n и спасшихся пассажиров") + xlab(NULL)
g2 <- ggbar + aes(x = factor(Pclass, labels = c("Первый", "Второй", "Третий"))) +
ggtitle("Распределение пассажиров\n по классам обслуживания") + xlab(NULL)
g3 <- ggbar + aes(x = factor(Sex, labels = c("Женщина", "Мужчина"))) +
ggtitle("Распределение пассажиров между полами") + xlab(NULL)
g4 <- ggbar + aes(x = as.factor(SibSp)) +
ggtitle("Распределение пассажиров по сумме\n 'супруг + братья и сёстры на борту корабля'") +
xlab(NULL)
g5 <- ggbar + aes(x = as.factor(Parch)) +
ggtitle("Распределение пассажиров по сумме\n 'родители + дети на борту'") + xlab(NULL)
g6 <- ggbar + aes(x = factor(Embarked, labels = c("Cherbourg", "Queenstown", "Southampton"))) +
ggtitle("Распределение пассажиров\n по пункту отправления") +
xlab(NULL)
gghist <- ggplot(data_train) + geom_histogram(fill= colours[4]) + guides(fill=FALSE) + ylab(NULL)
g7 <- gghist + aes(x = Age) + xlab(NULL) + ggtitle("Распределение пассажиров по возрастам")
g8 <- gghist + aes(x = Fare) + xlab(NULL) + ggtitle("Распределение пассажиров\n по стоимости билетов")
grid.arrange(g1, g2, g3, g4, g5, g6, g7, g8, ncol = 2, nrow=4)
data_train$Embarked[is.na(data_train$Embarked)] <- "S"
require(stringr)
data_train$Title <-  data_train$Name %>% str_extract(., "\\w+\\.") %>% str_sub(.,1, -2)
unique(data_train$Title)
data_train$Age[data_train$Title == "Dr"]
temp <- data_train$Age
temp[data_train$Title == "Dr"]
temp[data_train$Title == "Dr"]%<>% mean(., na.rm = T)
temp[data_train$Title == "Dr"]
temp[(data_train$Title == "Dr")&(data_train$Age == NA)]
temp[(data_train$Title == "Dr")&(temp == NA)]
temp[data_train$Title == "Dr"]
temp <- data_train$Age
temp[(data_train$Title == "Dr")&(temp == NA)]
temp[(data_train$Title == "Dr")& is.na(temp)]
temp[(data_train$Title == "Dr")& is.na(temp)]%<>% mean(., na.rm = T)
temp[data_train$Title == "Dr"]
temp <- data_train$Age
temp[(data_train$Title == "Dr")& is.na(temp)] <-  mean(temp[data_train$Title == "Dr"], na.rm = T)
temp[data_train$Title == "Dr"]
impute.mean <- function (impute_col, filter_var, var_levels) {
for (lev in var_levels) {
impute_col[(filter_var == lev) & is.na(impute_col)] <-
mean(impute_col[filter_var == lev], na.rm = T)
}
return (impute_col)
}
data_train$Age <- impute.mean(data_train$Age, data_train$Title, c("Dr", "Master", "Mrs", "Miss", "Mr"))
summary(data_train$Age)
data_train %>% group_by(Title) %>%
summarise(count = n(), Missing = sum(is.na(Age)), Mean = round(mean(Age, na.rm = T), 2))
head(table(data_train$Fare))
data_train %>% filter(Fare < 6) %>% select(Fare, Age, Pclass, Title) %>% arrange(Fare)
data_train$Fare[data_train$Fare == 0] <- NA
data_train$Fare <- impute.mean(data_train$Fare, data_train$Pclass, as.numeric(levels(data_train$Pclass)))
data_train %>% filter(Fare < 6) %>% select(Fare, Age, Pclass, Title) %>% arrange(Fare)
head(table(data_train$Fare))
ggplot(data_train, aes(x = factor(Survived, labels = c("Погиб", "Выжил")),
y = Age, fill = factor(Survived, labels = c("Погиб", "Выжил")))) +
geom_boxplot() + scale_fill_manual (values=colours[]) +
guides(fill=guide_legend(title=NULL)) +
ylab(NULL) + xlab(NULL)
ggplot(data_train, aes(x = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","the Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","the Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")))) +
geom_boxplot() + scale_fill_manual (values=colours[]) +
guides(fill=guide_legend(title=NULL)) +
ylab(NULL) + xlab(NULL)
data_train[data_train$Title == NA]
data_train[data_train$Title == NA,]
fix(data_train)
summary(data_train$Title)
data_train[data_train$Title == "NA",]
filter(data_train, is.na(Title))
data_train[is.na(data_train$Title),]
ggplot(data_train, aes(x = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")))) +
geom_boxplot() + scale_fill_manual (values=colours[]) +
guides(fill=guide_legend(title=NULL)) +
ylab(NULL) + xlab(NULL)
ggplot(data_train, aes(y = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
x = Age, factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")))) +
geom_boxplot() + scale_fill_manual (values=colours[]) +
guides(fill=guide_legend(title=NULL)) +
ylab(NULL) + xlab(NULL)
ggplot(data_train, aes(x = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")))) +
geom_boxplot() + scale_fill_manual (values=colours[]) +
guides(fill=guide_legend(title=NULL)) +
ylab(NULL) + xlab(NULL)
ggplot(data_train, aes(x = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")))) +
geom_boxplot()  + guides(fill=guide_legend(title=NULL)) +
ylab(NULL) + xlab(NULL)
colours <- rainbow_hcl(17, start = 30, end = 300)
ggplot(data_train, aes(x = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")))) +
geom_boxplot()  + guides(fill=guide_legend(title=NULL)) +
ylab(NULL) + xlab(NULL)
colours <- rainbow_hcl(4, start = 30, end = 300)
ggplot(data_train, aes(x = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, fill = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")))) +
geom_boxplot()  + guides(fill=guide_legend(title=NULL)) +
ylab(NULL) + xlab(NULL)
ggplot(data_train, aes(x = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, fill = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")))) +
geom_boxplot()  + guides(fill=guide_legend(title=NULL)) +
ylab(NULL) + xlab(NULL)+ scale_fill_manual (values=colours[])
colours <- rainbow_hcl(17, start = 30, end = 300)
ggplot(data_train, aes(x = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, fill = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")))) +
geom_boxplot()  + guides(fill=guide_legend(title=NULL)) +
ylab(NULL) + xlab(NULL)+ scale_fill_manual (values=colours[])
colours <- rainbow_hcl(4, start = 30, end = 300)
ggplot(data_train, aes(x = factor(Title, c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, fill = colours[3])) +
geom_boxplot()  + guides(fill=guide_legend(title=NULL)) +
ylab(NULL) + xlab(NULL)
ggplot(data_train, aes(x = factor(Title,
c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, fill = colours[3])) + geom_boxplot() +
guides(fill=guide_legend(title=NULL))# + ylab(NULL) + xlab(NULL)
ggplot(data_train, aes(x = factor(Title,
c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, fill = colours[3])) + geom_boxplot() +
guides(fill=guide_legend(title=NULL)) + ylab("Возраст") + xlab(NULL)
ggplot(data_train, aes(x = factor(Title,
c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age, fill = colours[3])) + geom_boxplot() + guides(fill=FALSE) +
guides(fill=guide_legend(title=NULL)) + ylab("Возраст") + xlab(NULL)
ggplot(data_train, aes(x = factor(Title,
c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age)) + geom_boxplot() + guides(fill=FALSE) +
guides(fill=guide_legend(title=NULL)) + ylab("Возраст") + xlab(NULL)
library(rpart)
library(rpart.plot)
title_tree <- rpart(Survived ~ Title, data = data_train, method="class")
prp(title_tree)
title_tree <- rpart(Survived ~ Title, data = data_train, method="class", cp=0.00005)
prp(title_tree)
title_tree <- rpart(Survived ~ Title, data = data_train, method="class", minbucket = 5)
prp(title_tree)
title_tree <- rpart(Survived ~ Title, data = data_train, method="class", minbucket = 1)
prp(title_tree)
distance = dist(data_train, method = "euclidean")
data_train$Fare[data_train$Fare == 0] <- NA
data_train$Fare <- impute.mean(data_train$Fare, data_train$Pclass, as.numeric(levels(data_train$Pclass)))
summary(data_train)
title_tree <- rpart(Survived ~ Title + Age, data = data_train, method="class")
prp(title_tree)
title_tree <- rpart(Survived ~ Title + Age, data = data_train, method="class", minbucket = 1)
prp(title_tree)
ggplot(data_train, aes(x = factor(Title,
c("Capt","Col","Major","Sir","Lady","Rev",
"Dr","Don","Jonkheer","Countess","Mrs",
"Ms","Mr","Mme","Mlle","Miss","Master")),
y = Age)) + geom_boxplot() + guides(fill=FALSE) +
guides(fill=guide_legend(title=NULL)) + ylab("Возраст") + xlab(NULL)
data_train %>% group_by(Title) %>%
summarise(count = n(), Missing = sum(is.na(Age)), Mean = round(mean(Age, na.rm = T), 2))
ggplot(data_train, aes(x = Title, y = Age)) + geom_boxplot() + guides(fill=FALSE) +
guides(fill=guide_legend(title=NULL)) + ylab("Возраст") + xlab(NULL)
change.titles <- function(data, old_title, new_title) {
for (title in old_title) {
data$Title[data$Title == title] <- new_title
}
return (data$Title)
}
data_train$Title <- change.titles(data_train,
c("Capt", "Col", "Don", "Dr",
"Jonkheer", "Lady", "Major",
"Rev", "Sir", "Countess"),
"Aristocratic")
data_train$Title <- change.titles(data_train, c("Ms"),
"Mrs")
data_train$Title <- change.titles(data_train, c("Mlle", "Mme"), "Miss")
data_train$Title <- as.factor(data_train$Title)
data_train %>% group_by(Title) %>%
summarise(count = n(), Missing = sum(is.na(Age)), Mean = round(mean(Age, na.rm = T), 2))
unique(data_train$Title)
unique(data_train$Survived)
require(readr)
data_train <- read_csv("train.csv")
data_test <- read_csv("test.csv")
require(magrittr)
require(dplyr)
data_train %>% select(Name, Sex, Ticket, Cabin, Embarked) %>% apply(., 2, function(column) sum(column == ""))
require(car)
data_train$Cabin <- recode(data_train$Cabin, "'' = NA")
data_train$Embarked <- recode(data_train$Embarked, "'' = NA")
require(colorspace)
colors_A <- sequential_hcl(2)
require(Amelia)
missmap(data_train, col = colors_A, legend=FALSE)
## Для создания графиков в этом исследовании я буду стараться использовать пакет 'ggplot2'
require(ggplot2)
require(gridExtra)
data_train %<>% transform(., Survived = as.factor(Survived),
Pclass = as.factor(Pclass),
Sex = as.factor(Sex),
Embarked = as.factor(Embarked),
SibSp = as.numeric(SibSp))
colours <- rainbow_hcl(4, start = 30, end = 300)
ggbar <- ggplot(data_train) + geom_bar(stat = "bin", width=.6, fill= colours[3], colour="black") +
guides(fill=FALSE) + ylab(NULL)
g1 <- ggbar + aes(x = factor(Survived, labels = c("Погиб", "Выжил"))) +
ggtitle("Распределение погибших\n и спасшихся пассажиров") + xlab(NULL)
g2 <- ggbar + aes(x = factor(Pclass, labels = c("Первый", "Второй", "Третий"))) +
ggtitle("Распределение пассажиров\n по классам обслуживания") + xlab(NULL)
g3 <- ggbar + aes(x = factor(Sex, labels = c("Женщина", "Мужчина"))) +
ggtitle("Распределение пассажиров между полами") + xlab(NULL)
g4 <- ggbar + aes(x = as.factor(SibSp)) +
ggtitle("Распределение пассажиров по сумме\n 'супруг + братья и сёстры на борту корабля'") +
xlab(NULL)
g5 <- ggbar + aes(x = as.factor(Parch)) +
ggtitle("Распределение пассажиров по сумме\n 'родители + дети на борту'") + xlab(NULL)
g6 <- ggbar + aes(x = factor(Embarked, labels = c("Cherbourg", "Queenstown", "Southampton"))) +
ggtitle("Распределение пассажиров\n по пункту отправления") +
xlab(NULL)
gghist <- ggplot(data_train) + geom_histogram(fill= colours[4]) + guides(fill=FALSE) + ylab(NULL)
g7 <- gghist + aes(x = Age) + xlab(NULL) + ggtitle("Распределение пассажиров по возрастам")
g8 <- gghist + aes(x = Fare) + xlab(NULL) + ggtitle("Распределение пассажиров\n по стоимости билетов")
grid.arrange(g1, g2, g3, g4, g5, g6, g7, g8, ncol = 2, nrow=4)
data_train$Embarked[is.na(data_train$Embarked)] <- "S"
require(stringr)
data_train$Title <-  data_train$Name %>% str_extract(., "\\w+\\.") %>% str_sub(.,1, -2)
unique(data_train$Title)
impute.mean <- function (impute_col, filter_var, var_levels) {
for (lev in var_levels) {
impute_col[(filter_var == lev) & is.na(impute_col)] <-
mean(impute_col[filter_var == lev], na.rm = T)
}
return (impute_col)
}
data_train$Age <- impute.mean(data_train$Age, data_train$Title, c("Dr", "Master", "Mrs", "Miss", "Mr"))
summary(data_train$Age)
data_train$Fare[data_train$Fare == 0] <- NA
data_train$Fare <- impute.mean(data_train$Fare, data_train$Pclass, as.numeric(levels(data_train$Pclass)))
change.titles <- function(data, old_title, new_title) {
for (title in old_title) {
data$Title[data$Title == title] <- new_title
}
return (data$Title)
}
data_train$Title <- change.titles(data_train,
c("Capt", "Col", "Don", "Dr",
"Jonkheer", "Lady", "Major",
"Rev", "Sir", "Countess"),
"Aristocratic")
data_train$Title <- change.titles(data_train, c("Ms"),
"Mrs")
data_train$Title <- change.titles(data_train, c("Mlle", "Mme"), "Miss")
data_train$Title <- as.factor(data_train$Title)
hw <- "Hadley Wickham"
fix(data_train)
ggplot(data = data_train, aes(x = Age, y = Pclass)) + geom_point()
ggplot(data = data_train, aes(x = Age, y = Pclass)) + geom_point() + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass)) + geom_point(shape = 1) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass)) + geom_point(shape = 1, size = 2) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass)) + geom_point(shape = 1, size = 3) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass)) + geom_point(shape = 1, size = 4) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = Survived)) + geom_point(shape = 1, size = 4, ) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = Survived)) + geom_point(shape = 2, size = 4, ) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = Survived)) + geom_point(shape = 3, size = 4, ) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = Survived)) + geom_point(shape = 4, size = 4) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = Survived)) + geom_point(shape = 5, size = 4) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = Survived)) + geom_point(shape = 6, size = 4) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = Survived)) + geom_point(shape = 7, size = 4) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = Survived)) + geom_point(shape = 1, size = 4, position=position_jitter(width=1,height=.5)) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = Survived)) + geom_point(shape = 1, size = 4, position=position_jitter(width=0.1,height=.1)) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = factor(Survived, labels = c("Погиб", "Выжил")))) + geom_point(shape = 1, size = 4, position=position_jitter(width=0.1,height=.1)) + facet_grid(factor(Sex, labels = c("Женщина", "Мужчина")) ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = Survived)) + geom_point(shape = 1, size = 4, position=position_jitter(width=0.1,height=.1)) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = Survived)) + geom_point(shape = 1, size = 4, position=position_jitter(width=0.1,height=.1)) + facet_grid(factor(Sex, labels = c("Женщина", "Мужчина")) ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = factor(Survived, labels = c("Погиб", "Выжил")))) + geom_point(shape = 1, size = 4, position=position_jitter(width=0.1,height=.1)) + facet_grid(Sex ~ .)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = factor(Survived, labels = c("Погиб", "Выжил")))) + geom_point(shape = 1, size = 4, position=position_jitter(width=0.1,height=.1)) + facet_grid(Sex ~ .) + guides(fill=guide_legend(title=NULL))
ggplot(data = data_train, aes(x = Age, y = Pclass, color = factor(Survived, labels = c("Погиб", "Выжил")))) + geom_point(shape = 1, size = 4, position=position_jitter(width=0.1,height=.1)) + facet_grid(Sex ~ .) + guides(fill=FALSE)
ggplot(data = data_train, aes(x = Age, y = Pclass, color = factor(Survived, labels = c("Погиб", "Выжил")))) + geom_point(shape = 1, size = 4, position=position_jitter(width=0.1,height=.1)) + facet_grid(Sex ~ .) + guides(color=guide_legend(title=NULL))
ggplot(data = data_train,
aes(x = Age, y = Pclass, color = factor(Survived, labels = c("Погиб", "Выжил")))) +
geom_point(shape = 1, size = 4, position=position_jitter(width=0.1,height=.1)) +
facet_grid(Sex ~ .) + guides(color=guide_legend(title=NULL)) +
xlab("Возраст") + ylab("Класс каюты")
fam_name <- function( x ) {
fmn <- strsplit( x, ',' )
fmn[[1]][1]
}
Family <- sapply( data_train$Name, fam_name, USE.NAMES=FALSE )
fix(Family)
length(unique(Family))
ggplot(data_train, aes(x = factor(Title,
c("Aristocratic", "Mrs", "Mr", "Miss", "Master")),
y = Age)) + geom_boxplot() + guides(fill=FALSE) +
guides(fill=guide_legend(title=NULL)) + ylab("Возраст") + xlab(NULL)
```
Surv_rate <- data_train %>% group_by(Title) %>%
summarise(Rate = mean(Survived))
Surv_rate
ggplot(Surv_rate, aes(x = Title, y = Rate)) + geom_bar()
ggplot(Surv_rate, aes(x = Title, y = Rate)) + geom_bar(stat = "bin", width=.6)
ggplot(Surv_rate, aes(x = Title, y = Rate)) + geom_bar(stat = "identity", width=.6)
fix(data_train)
summary(data_train$Survived)
data_train %>% group_by(Title) %>% summarise(Rate = mean(Survived), n())
data_train %>% group_by(Title) %>% summarise(Rate = mean(Survived), n(), sum(Survived))
data_train %>% group_by(Title) %>% summarise(Rate = mean(Survived), n(), sum(Survived), sum(Survived)/n())
sum(data_train$Survived)/length(data_train$Survived)
data_train %>% group_by(Title) %>% summarise(Rate = mean(as.numeric(Survived)), n())
data_train %>% group_by(Title) %>% summarise(Rate = mean(as.numeric(as.character(Survived))), n())
data_train %>% group_by(Title) %>% summarise(Rate = mean(as.numeric(as.character(Survived)))
)
data_train %>% group_by(Title) %>% summarise(Rate = mean(as.numeric(as.character(Survived))))
Surv_rate <- data_train %>% group_by(Title) %>% summarise(Rate = mean(as.numeric(as.character(Survived))))
ggplot(Surv_rate, aes(x = Title, y = Rate/)) + geom_bar(stat = "identity", width=.6)
ggplot(Surv_rate, aes(x = Title, y = Rate)) + geom_bar(stat = "identity", width=.6)
ggplot(Surv_rate, aes(x = Title, y = Rate)) + geom_bar(stat = "identity", width=.6, fill= colours[3])
ggplot(data_train, aes(x = factor(Title,
c("Aristocratic", "Mrs", "Mr", "Miss", "Master")),
y = Age)) + geom_boxplot(fill= colours[3]) + guides(fill=FALSE) +
guides(fill=guide_legend(title=NULL)) + ylab("Возраст") + xlab(NULL)
```
Family <- data_train$SibSp + data_train$Parch
ggplot(data_train, aes(x = SibSp, y = Parch, color = Survived)) + geom_point()
ggplot(data_train, aes(x = SibSp, y = Parch, color = Survived)) + geom_point(shape = 1, size = 4, position=position_jitter(width=0.1,height=.1))
ggplot(data_train, aes(x = SibSp, y = Parch, color = Survived)) + geom_point(shape = 1, size = 4, position=position_jitter(width=0.2,height=.2))
Surv_rate_title <- data_train %>% group_by(SibSp + Parch) %>% summarise(Rate = mean(as.numeric(as.character(Survived))))
Surv_rate_title
Surv_rate_family <- data_train %>% group_by(SibSp + Parch) %>% summarise(Rate = mean(as.numeric(as.character(Survived))))
ggplot(Surv_rate, aes(x = (SibSp + Parch), y = Rate)) + geom_bar(stat = "identity", width=.6, fill= colours[3]) +
xlab(NULL) + ylab("Процент выживаемости")
Surv_rate_family <- data_train %>% group_by(Family = SibSp + Parch) %>% summarise(Rate = mean(as.numeric(as.character(Survived))))
Surv_rate_family
ggplot(Surv_rate_family, aes(x = Family, y = Rate)) + geom_bar(stat = "identity", width=.6, fill= colours[3]) +
xlab(NULL) + ylab("Процент выживаемости")
ggplot(Surv_rate_family, aes(x = Family, fill = Survived)) + geom_bar(stat = "bin", width=.6, fill= colours[3]) +
xlab(NULL) + ylab("Процент выживаемости")
library(rpart)
library(rpart.plot)
family.tree <- rpart(Survives ~ SibSp + Parch, data = data_train)
family.tree <- rpart(Survived ~ SibSp + Parch, data = data_train)
family.tree <- rpart(Survived ~ SibSp + Parch, data = data_train, method="class")
prp(family)
prp(family.tree)
ggplot(data_train, aes(x = SibSp, y = Parch, color = Survived)) + geom_point(shape = 1, size = 4, position=position_jitter(width=0.2,height=.2))
ggplot(data_train, aes(x = SibSp, y = Parch, color = factor(Survived, labels = c("Погиб", "Выжил")))) +
geom_point(shape = 1, size = 4, position=position_jitter(width=0.2,height=.2)) +
guides(color=guide_legend(title=NULL)) + xlab("Кол-во родственников\n по горизонтали,\n т.е. братья, сёстры") +
ylab("Кол-во родственников\n по вертикали,\n т.е. родители, дети и т.д.")
ggplot(data_train, aes(x = SibSp, y = Parch, color = factor(Survived, labels = c("Погиб", "Выжил")))) +
geom_point(shape = 1, size = 4, position=position_jitter(width=0.3,height=.3)) +
guides(color=guide_legend(title=NULL)) + xlab("Кол-во родственников\n по горизонтали,\n т.е. братья, сёстры") +
ylab("Кол-во родственников\n по вертикали,\n т.е. родители, дети и т.д.")
Surv_rate_family <- data_train %>% group_by(Family = SibSp + Parch) %>%
summarise(Rate = mean(as.numeric(as.character(Survived))))
ggplot(Surv_rate_family, aes(x = Family, y = Rate)) + geom_bar(stat = "identity", width=.6, fill= colours[3]) +
+     xlab(NULL) + ylab("Процент выживаемости")
Surv_rate_family <- data_train %>% group_by(Family = SibSp + Parch) %>%
summarise(Rate = mean(as.numeric(as.character(Survived))))
ggplot(Surv_rate_family, aes(x = Family, y = Rate)) +
geom_bar(stat = "identity", width=.6, fill= colours[3]) +
xlab(NULL) + ylab("Процент выживаемости")
data_train$Family <- data_train$SibSp + data_train$Parch
data_train$isFamily <- data_train$Family > 0
head(data_train$isFamily)
data_train$isFamily <- as.factor(data_train$Family > 0, c("alone", "with family")
)
data_train$isFamily <- as.factor(data_train$Family > 0, labels = c("alone", "with family"))
data_train$isFamily <- as.factor(data_train$Family > 0)
head(data_train$isFamily)
data_train$isFamily <- as.factor(as.numeric(data_train$Family > 0), labels = c(0 ="alone", 1 = "with family"))
data_train$isFamily <- as.factor(as.numeric(data_train$Family > 0), labels = c("alone","with family"))
data_train$isFamily <- as.factor(as.numeric(data_train$Family > 0))
head(data_train$isFamily)
